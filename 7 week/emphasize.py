# Учительница задала Пете домашнее задание — в заданном тексте
# расставить ударения в словах, после чего поручила Васе проверить это
# домашнее задание. Вася очень плохо знаком с данной темой,поэтому он
# нашел словарь, в котором указано, как ставятся ударения в словах.
# К сожалению, в этом словаре присутствуют не все слова. Вася решил,
# что в словах, которых нет в словаре, он будет считать, что Петя
# поставил ударения правильно, если в этом слове Петей поставлено ровно
# одно ударение.
#
# Оказалось, что в некоторых словах ударение может быть поставлено
# больше, чем одним способом. Вася решил, что в этом случае если то,
# как Петя поставил ударение, соответствует одному из приведенных
# в словаре вариантов, он будет засчитывать это как правильную
# расстановку ударения, а если не соответствует, то как ошибку.
# Вам дан словарь, которым пользовался Вася и домашнее задание, сданное
# Петей. Ваша задача — определить количество ошибок,которое в этом
# задании насчитает Вася.
#
# Формат ввода
# Вводится сначала число N — количество слов в словаре (0≤N≤20000).
# Далее идет N строк со словами из словаря. Каждое слово состоит
# не более чем из 30 символов. Все слова состоят из маленьких и
# заглавных латинских букв. В каждом слове заглавная ровно одна буква —
# та, на которую попадает ударение. Слова в словаре расположены в
# алфавитном порядке. Если есть несколько возможностей расстановки
# ударения в одном и том же слове, то эти варианты в словаре идут
# в произвольном порядке.
#
# Далее идет упражнение, выполненное Петей. Упражнение представляет
# собой строку текста, суммарным объемом не более 300000 символов.
# Строка состоит из слов, которые разделяются между собой ровно одним
# пробелом. Длина каждого слова не превышает 30 символов. Все слова
# состоят из маленьких и заглавных латинских букв (заглавными
# обозначены те буквы, над которыми Петя поставил ударение).
# Петя мог по ошибке в каком-то слове поставить более одного ударения
# или не поставить ударения вовсе.
#
# Формат вывода
# Выведите количество ошибок в Петином тексте, которые найдет Вася.
#
# Примечания
# Примечания к примерам тестов
# 1. В слове cannot, согласно словарю возможно два варианта расстановки
# ударения. Эти варианты в словаре могут быть перечислены в любом
# порядке (т.е. как сначала cAnnot, а потом cannOt, так и наоборот).
# Две ошибки, совершенные Петей — это слова be (ударение вообще
# не поставлено) и fouNd (ударение поставлено неверно). Слово thE
# отсутствует в словаре, но поскольку в нем Петя поставил ровно одно
# ударение, признается верным.
#
# 2. Неверно расставлены ударения во всех словах, кроме The (оно
# отсутствует в словаре, в нем поставлено ровно одно ударение).
# В остальных словах либо ударные все буквы (в слове PAGE), либо
# не поставлено ни одного ударения.


# d, err = {}, 0
# with open("emphasize.txt") as f:
#     for i in range(int(f.readline().strip())):
#         line = f.readline().strip()
#         d[line.lower()] = d.get(line.lower(), []) + [line]
#     phrase = f.readline().split()
# for word in phrase:
#     wrd = (word, sum([letter.isupper() for letter in word]))
#     if wrd[0].lower() not in d:
#         err = err + 1 if wrd[1] != 1 else err
#     else:
#         err = err + 1 if (wrd[0].lower() == article and wrd[0] not
#                           in d[article] for article in d) else err
#         for article in d:
#             if wrd[0].lower() == article and wrd[0] not in d[article]:
#                 err += 1
# print(err)


words, errors = dict(), 0
with open('input.txt', encoding='utf8') as inf:
    for _ in range(int(inf.readline())):
        word = inf.readline().strip()
        temp = words.get(word.upper(), set())
        temp.add(word)
        words[word.upper()] = temp
    for word in inf.readline().strip().split():
        if sum(map(str.isupper, word)) != 1 or \
                word.upper() in words and word not in words[word.upper()]:
            errors += 1
    print(errors)
